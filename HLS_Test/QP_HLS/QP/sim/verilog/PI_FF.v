// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="PI_FF,hls_ip_2018_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7a100tcsg324-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.384500,HLS_SYN_LAT=9,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=2,HLS_SYN_FF=853,HLS_SYN_LUT=1018,HLS_VERSION=2018_2}" *)

module PI_FF (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        setpoint_V,
        plant_in_V,
        error_V,
        error_V_ap_vld,
        pi_out_V,
        pi_out_V_ap_vld,
        acc_out_V_i,
        acc_out_V_o,
        acc_out_V_o_ap_vld
);

parameter    ap_ST_fsm_state1 = 10'd1;
parameter    ap_ST_fsm_state2 = 10'd2;
parameter    ap_ST_fsm_state3 = 10'd4;
parameter    ap_ST_fsm_state4 = 10'd8;
parameter    ap_ST_fsm_state5 = 10'd16;
parameter    ap_ST_fsm_state6 = 10'd32;
parameter    ap_ST_fsm_state7 = 10'd64;
parameter    ap_ST_fsm_state8 = 10'd128;
parameter    ap_ST_fsm_state9 = 10'd256;
parameter    ap_ST_fsm_state10 = 10'd512;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [15:0] setpoint_V;
input  [15:0] plant_in_V;
output  [15:0] error_V;
output   error_V_ap_vld;
output  [15:0] pi_out_V;
output   pi_out_V_ap_vld;
input  [15:0] acc_out_V_i;
output  [15:0] acc_out_V_o;
output   acc_out_V_o_ap_vld;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg error_V_ap_vld;
reg pi_out_V_ap_vld;
reg acc_out_V_o_ap_vld;

(* fsm_encoding = "none" *) reg   [9:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire  signed [15:0] p_Val2_1_fu_139_p2;
reg  signed [15:0] p_Val2_1_reg_505;
wire   [14:0] tmp_fu_145_p1;
reg   [14:0] tmp_reg_512;
wire  signed [15:0] p_Val2_5_fu_153_p2;
reg  signed [15:0] p_Val2_5_reg_517;
wire    ap_CS_fsm_state2;
wire   [14:0] p_Val2_5_cast_fu_158_p2;
reg   [14:0] p_Val2_5_cast_reg_523;
wire   [63:0] res_V_1_fu_168_p1;
reg   [63:0] res_V_1_reg_533;
wire    ap_CS_fsm_state7;
wire   [10:0] exp_V_2_fu_182_p2;
reg   [10:0] exp_V_2_reg_538;
wire   [51:0] tmp_9_fu_188_p1;
reg   [51:0] tmp_9_reg_544;
wire   [14:0] tmp_s_fu_260_p3;
reg   [14:0] tmp_s_reg_549;
wire    ap_CS_fsm_state8;
reg   [15:0] p_Val2_4_reg_556;
reg   [0:0] tmp_10_reg_561;
reg   [15:0] p_Val2_9_reg_566;
reg   [0:0] tmp_20_reg_571;
reg   [14:0] tmp_12_reg_576;
reg   [14:0] tmp_16_reg_581;
wire   [15:0] tmp6_fu_392_p2;
reg   [15:0] tmp6_reg_586;
wire    ap_CS_fsm_state9;
wire   [1:0] tmp7_fu_408_p2;
reg   [1:0] tmp7_reg_591;
wire   [14:0] p_Val2_cast_fu_423_p2;
reg   [14:0] p_Val2_cast_reg_596;
wire    ap_CS_fsm_state10;
wire   [63:0] tmp_1_fu_131_p0;
wire  signed [31:0] grp_fu_136_p0;
wire  signed [15:0] p_Val2_1_fu_139_p0;
wire   [14:0] tmp_2_fu_149_p1;
wire   [63:0] grp_fu_136_p1;
wire   [10:0] exp_V_fu_172_p4;
wire   [63:0] p_Result_s_fu_197_p5;
wire   [0:0] tmp_4_fu_212_p3;
wire   [0:0] notrhs_fu_231_p2;
wire   [0:0] notlhs_fu_226_p2;
wire   [0:0] tmp_7_fu_236_p2;
wire   [0:0] tmp_1_fu_131_p2;
wire   [0:0] tmp_3_fu_242_p2;
wire   [0:0] tmp_5_fu_192_p2;
wire   [0:0] tmp_6_fu_248_p2;
wire   [0:0] sel_tmp1_fu_254_p2;
wire   [14:0] p_Val2_5_37_fu_219_p3;
wire  signed [25:0] p_Val2_3_fu_482_p2;
wire  signed [27:0] p_Val2_8_fu_491_p2;
wire   [18:0] p_shl_fu_331_p3;
wire   [16:0] p_shl9_fu_342_p3;
wire   [19:0] p_shl_cast_fu_338_p1;
wire   [19:0] p_shl9_cast_fu_349_p1;
wire   [19:0] p_Val2_6_fu_353_p2;
wire   [11:0] tmp_11_fu_359_p4;
wire   [0:0] tmp_13_fu_373_p3;
wire   [15:0] p_Val2_7_fu_369_p1;
wire   [14:0] tmp_14_fu_388_p1;
wire   [1:0] tmp_7_cast_fu_385_p1;
wire   [1:0] tmp_4_cast_fu_381_p1;
wire   [1:0] tmp_2_cast_fu_328_p1;
wire   [1:0] tmp8_fu_402_p2;
wire   [14:0] tmp_15_fu_397_p2;
wire   [14:0] tmp_18_fu_419_p1;
wire   [14:0] tmp_17_fu_414_p2;
wire   [15:0] tmp5_fu_429_p2;
wire   [15:0] tmp7_cast_fu_433_p1;
wire   [15:0] p_Val2_s_38_fu_436_p2;
wire   [0:0] tmp_8_fu_442_p2;
wire   [0:0] tmp_21_fu_448_p3;
wire   [0:0] tmp_19_fu_464_p2;
wire   [14:0] p_Val2_cast_39_fu_456_p3;
wire   [14:0] pi_out_V_new_1_fu_470_p3;
wire   [9:0] p_Val2_3_fu_482_p0;
wire   [11:0] p_Val2_8_fu_491_p0;
reg   [9:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 10'd1;
end

PI_FF_dcmp_64ns_6bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 1 ))
PI_FF_dcmp_64ns_6bkb_U1(
    .din0(tmp_1_fu_131_p0),
    .din1(64'd4624127212397998899),
    .opcode(5'd2),
    .dout(tmp_1_fu_131_p2)
);

PI_FF_sitodp_32s_cud #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
PI_FF_sitodp_32s_cud_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_136_p0),
    .ce(1'b1),
    .dout(grp_fu_136_p1)
);

PI_FF_mul_mul_10ndEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 26 ))
PI_FF_mul_mul_10ndEe_U3(
    .din0(p_Val2_3_fu_482_p0),
    .din1(p_Val2_1_reg_505),
    .dout(p_Val2_3_fu_482_p2)
);

PI_FF_mul_mul_12neOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 28 ))
PI_FF_mul_mul_12neOg_U4(
    .din0(p_Val2_8_fu_491_p0),
    .din1(setpoint_V),
    .dout(p_Val2_8_fu_491_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        exp_V_2_reg_538 <= exp_V_2_fu_182_p2;
        res_V_1_reg_533 <= res_V_1_fu_168_p1;
        tmp_9_reg_544 <= tmp_9_fu_188_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        p_Val2_1_reg_505 <= p_Val2_1_fu_139_p2;
        tmp_reg_512 <= tmp_fu_145_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        p_Val2_4_reg_556 <= {{p_Val2_3_fu_482_p2[23:8]}};
        p_Val2_9_reg_566 <= {{p_Val2_8_fu_491_p2[23:8]}};
        tmp_10_reg_561 <= p_Val2_3_fu_482_p2[32'd7];
        tmp_12_reg_576 <= {{p_Val2_8_fu_491_p2[22:8]}};
        tmp_16_reg_581 <= {{p_Val2_3_fu_482_p2[22:8]}};
        tmp_20_reg_571 <= p_Val2_8_fu_491_p2[32'd7];
        tmp_s_reg_549 <= tmp_s_fu_260_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        p_Val2_5_cast_reg_523 <= p_Val2_5_cast_fu_158_p2;
        p_Val2_5_reg_517 <= p_Val2_5_fu_153_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        p_Val2_cast_reg_596 <= p_Val2_cast_fu_423_p2;
        tmp6_reg_586 <= tmp6_fu_392_p2;
        tmp7_reg_591 <= tmp7_fu_408_p2;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        acc_out_V_o_ap_vld = 1'b1;
    end else begin
        acc_out_V_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        error_V_ap_vld = 1'b1;
    end else begin
        error_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        pi_out_V_ap_vld = 1'b1;
    end else begin
        pi_out_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign acc_out_V_o = tmp_s_reg_549;

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign error_V = p_Val2_1_reg_505;

assign exp_V_2_fu_182_p2 = ($signed(11'd2040) + $signed(exp_V_fu_172_p4));

assign exp_V_fu_172_p4 = {{res_V_1_fu_168_p1[62:52]}};

assign grp_fu_136_p0 = p_Val2_5_fu_153_p2;

assign notlhs_fu_226_p2 = ((exp_V_2_reg_538 != 11'd2047) ? 1'b1 : 1'b0);

assign notrhs_fu_231_p2 = ((tmp_9_reg_544 == 52'd0) ? 1'b1 : 1'b0);

assign p_Result_s_fu_197_p5 = {{res_V_1_reg_533[63:63]}, {exp_V_2_reg_538}, {res_V_1_reg_533[51:0]}};

assign p_Val2_1_fu_139_p0 = setpoint_V;

assign p_Val2_1_fu_139_p2 = ($signed(p_Val2_1_fu_139_p0) - $signed(plant_in_V));

assign p_Val2_3_fu_482_p0 = 26'd330;

assign p_Val2_5_37_fu_219_p3 = ((tmp_4_fu_212_p3[0:0] === 1'b1) ? 15'd0 : p_Val2_5_cast_reg_523);

assign p_Val2_5_cast_fu_158_p2 = (tmp_2_fu_149_p1 + tmp_reg_512);

assign p_Val2_5_fu_153_p2 = ($signed(p_Val2_1_reg_505) + $signed(acc_out_V_i));

assign p_Val2_6_fu_353_p2 = (p_shl_cast_fu_338_p1 + p_shl9_cast_fu_349_p1);

assign p_Val2_7_fu_369_p1 = tmp_11_fu_359_p4;

assign p_Val2_8_fu_491_p0 = 28'd1700;

assign p_Val2_cast_39_fu_456_p3 = ((tmp_8_fu_442_p2[0:0] === 1'b1) ? 15'd3840 : 15'd0);

assign p_Val2_cast_fu_423_p2 = (tmp_18_fu_419_p1 + tmp_17_fu_414_p2);

assign p_Val2_s_38_fu_436_p2 = (tmp5_fu_429_p2 + tmp7_cast_fu_433_p1);

assign p_shl9_cast_fu_349_p1 = p_shl9_fu_342_p3;

assign p_shl9_fu_342_p3 = {{tmp_s_reg_549}, {2'd0}};

assign p_shl_cast_fu_338_p1 = p_shl_fu_331_p3;

assign p_shl_fu_331_p3 = {{tmp_s_reg_549}, {4'd0}};

assign pi_out_V = pi_out_V_new_1_fu_470_p3;

assign pi_out_V_new_1_fu_470_p3 = ((tmp_19_fu_464_p2[0:0] === 1'b1) ? p_Val2_cast_39_fu_456_p3 : p_Val2_cast_reg_596);

assign res_V_1_fu_168_p1 = grp_fu_136_p1;

assign sel_tmp1_fu_254_p2 = (tmp_6_fu_248_p2 | tmp_5_fu_192_p2);

assign tmp5_fu_429_p2 = (p_Val2_4_reg_556 + tmp6_reg_586);

assign tmp6_fu_392_p2 = (p_Val2_9_reg_566 + p_Val2_7_fu_369_p1);

assign tmp7_cast_fu_433_p1 = tmp7_reg_591;

assign tmp7_fu_408_p2 = (tmp_2_cast_fu_328_p1 + tmp8_fu_402_p2);

assign tmp8_fu_402_p2 = (tmp_7_cast_fu_385_p1 + tmp_4_cast_fu_381_p1);

assign tmp_11_fu_359_p4 = {{p_Val2_6_fu_353_p2[19:8]}};

assign tmp_13_fu_373_p3 = p_Val2_6_fu_353_p2[32'd7];

assign tmp_14_fu_388_p1 = tmp_11_fu_359_p4;

assign tmp_15_fu_397_p2 = (tmp_14_fu_388_p1 + tmp_12_reg_576);

assign tmp_17_fu_414_p2 = (tmp_15_fu_397_p2 + tmp_16_reg_581);

assign tmp_18_fu_419_p1 = tmp7_fu_408_p2;

assign tmp_19_fu_464_p2 = (tmp_8_fu_442_p2 | tmp_21_fu_448_p3);

assign tmp_1_fu_131_p0 = p_Result_s_fu_197_p5;

assign tmp_21_fu_448_p3 = p_Val2_s_38_fu_436_p2[32'd15];

assign tmp_2_cast_fu_328_p1 = tmp_10_reg_561;

assign tmp_2_fu_149_p1 = acc_out_V_i[14:0];

assign tmp_3_fu_242_p2 = (tmp_7_fu_236_p2 & tmp_1_fu_131_p2);

assign tmp_4_cast_fu_381_p1 = tmp_13_fu_373_p3;

assign tmp_4_fu_212_p3 = p_Val2_5_reg_517[32'd15];

assign tmp_5_fu_192_p2 = ((p_Val2_5_reg_517 == 16'd0) ? 1'b1 : 1'b0);

assign tmp_6_fu_248_p2 = (tmp_3_fu_242_p2 ^ 1'd1);

assign tmp_7_cast_fu_385_p1 = tmp_20_reg_571;

assign tmp_7_fu_236_p2 = (notrhs_fu_231_p2 | notlhs_fu_226_p2);

assign tmp_8_fu_442_p2 = (($signed(p_Val2_s_38_fu_436_p2) > $signed(16'd3840)) ? 1'b1 : 1'b0);

assign tmp_9_fu_188_p1 = res_V_1_fu_168_p1[51:0];

assign tmp_fu_145_p1 = p_Val2_1_fu_139_p2[14:0];

assign tmp_s_fu_260_p3 = ((sel_tmp1_fu_254_p2[0:0] === 1'b1) ? p_Val2_5_37_fu_219_p3 : 15'd3610);

endmodule //PI_FF
