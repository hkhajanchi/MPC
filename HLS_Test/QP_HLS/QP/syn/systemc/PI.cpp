// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "PI.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic PI::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic PI::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<11> PI::ap_ST_fsm_state1 = "1";
const sc_lv<11> PI::ap_ST_fsm_state2 = "10";
const sc_lv<11> PI::ap_ST_fsm_state3 = "100";
const sc_lv<11> PI::ap_ST_fsm_state4 = "1000";
const sc_lv<11> PI::ap_ST_fsm_state5 = "10000";
const sc_lv<11> PI::ap_ST_fsm_state6 = "100000";
const sc_lv<11> PI::ap_ST_fsm_state7 = "1000000";
const sc_lv<11> PI::ap_ST_fsm_state8 = "10000000";
const sc_lv<11> PI::ap_ST_fsm_state9 = "100000000";
const sc_lv<11> PI::ap_ST_fsm_state10 = "1000000000";
const sc_lv<11> PI::ap_ST_fsm_state11 = "10000000000";
const sc_lv<32> PI::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> PI::ap_const_lv32_1 = "1";
const sc_lv<32> PI::ap_const_lv32_2 = "10";
const sc_lv<32> PI::ap_const_lv32_3 = "11";
const sc_lv<32> PI::ap_const_lv32_8 = "1000";
const sc_lv<32> PI::ap_const_lv32_9 = "1001";
const sc_lv<32> PI::ap_const_lv32_A = "1010";
const sc_lv<64> PI::ap_const_lv64_400A666666666666 = "100000000001010011001100110011001100110011001100110011001100110";
const sc_lv<16> PI::ap_const_lv16_4000 = "100000000000000";
const sc_lv<32> PI::ap_const_lv32_F = "1111";
const sc_lv<15> PI::ap_const_lv15_4000 = "100000000000000";
const sc_lv<15> PI::ap_const_lv15_0 = "000000000000000";
const sc_lv<32> PI::ap_const_lv32_6 = "110";
const sc_lv<32> PI::ap_const_lv32_E = "1110";
const sc_lv<32> PI::ap_const_lv32_5 = "101";
const sc_lv<32> PI::ap_const_lv32_17 = "10111";
const sc_lv<32> PI::ap_const_lv32_7 = "111";
const sc_lv<32> PI::ap_const_lv32_16 = "10110";
const sc_lv<32> PI::ap_const_lv32_34 = "110100";
const sc_lv<32> PI::ap_const_lv32_3E = "111110";
const sc_lv<11> PI::ap_const_lv11_7F8 = "11111111000";
const sc_lv<11> PI::ap_const_lv11_7FF = "11111111111";
const sc_lv<52> PI::ap_const_lv52_0 = "0000000000000000000000000000000000000000000000000000";
const sc_lv<16> PI::ap_const_lv16_0 = "0000000000000000";
const sc_lv<15> PI::ap_const_lv15_34D = "1101001101";
const sc_lv<26> PI::ap_const_lv26_14A = "101001010";
const sc_lv<5> PI::ap_const_lv5_2 = "10";
const bool PI::ap_const_boolean_1 = true;

PI::PI(sc_module_name name) : sc_module(name), mVcdFile(0) {
    PI_dcmp_64ns_64nsbkb_U1 = new PI_dcmp_64ns_64nsbkb<1,1,64,64,1>("PI_dcmp_64ns_64nsbkb_U1");
    PI_dcmp_64ns_64nsbkb_U1->din0(tmp_12_fu_117_p0);
    PI_dcmp_64ns_64nsbkb_U1->din1(ap_var_for_const0);
    PI_dcmp_64ns_64nsbkb_U1->opcode(ap_var_for_const1);
    PI_dcmp_64ns_64nsbkb_U1->dout(tmp_12_fu_117_p2);
    PI_sitodp_32s_64_cud_U2 = new PI_sitodp_32s_64_cud<1,6,32,64>("PI_sitodp_32s_64_cud_U2");
    PI_sitodp_32s_64_cud_U2->clk(ap_clk);
    PI_sitodp_32s_64_cud_U2->reset(ap_rst);
    PI_sitodp_32s_64_cud_U2->din0(grp_fu_122_p0);
    PI_sitodp_32s_64_cud_U2->ce(ap_var_for_const2);
    PI_sitodp_32s_64_cud_U2->dout(grp_fu_122_p1);
    PI_mul_mul_10ns_1dEe_U3 = new PI_mul_mul_10ns_1dEe<1,1,10,16,26>("PI_mul_mul_10ns_1dEe_U3");
    PI_mul_mul_10ns_1dEe_U3->din0(p_Val2_2_fu_393_p0);
    PI_mul_mul_10ns_1dEe_U3->din1(p_Val2_1_reg_402);
    PI_mul_mul_10ns_1dEe_U3->dout(p_Val2_2_fu_393_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_acc_out_V_o);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( p_087_1_fu_179_p3 );

    SC_METHOD(thread_acc_out_V_o_ap_vld);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_error_V);
    sensitive << ( p_Val2_1_reg_402 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_error_V_ap_vld);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_exp_V_2_fu_304_p2);
    sensitive << ( exp_V_fu_294_p4 );

    SC_METHOD(thread_exp_V_fu_294_p4);
    sensitive << ( res_V_1_fu_290_p1 );

    SC_METHOD(thread_grp_fu_122_p0);
    sensitive << ( p_Val2_s_24_reg_434 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_internal_acc_V_cast_fu_145_p2);
    sensitive << ( tmp_2_fu_131_p1 );
    sensitive << ( tmp_3_fu_135_p1 );

    SC_METHOD(thread_internal_acc_V_fu_139_p2);
    sensitive << ( acc_out_V_i );
    sensitive << ( p_Val2_1_fu_125_p2 );

    SC_METHOD(thread_notlhs_fu_329_p2);
    sensitive << ( exp_V_2_reg_456 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_notrhs_fu_334_p2);
    sensitive << ( tmp_15_reg_462 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_p_087_1_fu_179_p3);
    sensitive << ( tmp_7_fu_173_p2 );
    sensitive << ( p_Val2_5_fu_165_p3 );
    sensitive << ( internal_acc_V_cast_fu_145_p2 );

    SC_METHOD(thread_p_Result_s_fu_314_p5);
    sensitive << ( res_V_1_reg_451 );
    sensitive << ( exp_V_2_reg_456 );

    SC_METHOD(thread_p_Val2_1_fu_125_p2);
    sensitive << ( setpoint_V );
    sensitive << ( plant_in_V );

    SC_METHOD(thread_p_Val2_2_fu_393_p0);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_p_Val2_4_fu_241_p1);
    sensitive << ( tmp_reg_408 );

    SC_METHOD(thread_p_Val2_5_fu_165_p3);
    sensitive << ( tmp_s_fu_151_p2 );

    SC_METHOD(thread_p_Val2_cast_25_fu_369_p3);
    sensitive << ( sel_tmp1_reg_467 );

    SC_METHOD(thread_p_Val2_cast_fu_280_p2);
    sensitive << ( tmp_1_fu_265_p2 );
    sensitive << ( tmp_5_fu_270_p1 );

    SC_METHOD(thread_p_Val2_s_24_fu_274_p2);
    sensitive << ( tmp4_cast_fu_261_p1 );
    sensitive << ( tmp3_fu_250_p2 );

    SC_METHOD(thread_pi_out_V);
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( pi_out_V_new_1_fu_381_p3 );

    SC_METHOD(thread_pi_out_V_ap_vld);
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_pi_out_V_new_1_fu_381_p3);
    sensitive << ( p_Val2_cast_reg_441 );
    sensitive << ( tmp_14_fu_376_p2 );
    sensitive << ( p_Val2_cast_25_fu_369_p3 );

    SC_METHOD(thread_res_V_1_fu_290_p1);
    sensitive << ( grp_fu_122_p1 );

    SC_METHOD(thread_sel_tmp1_fu_356_p2);
    sensitive << ( sel_tmp_fu_351_p2 );
    sensitive << ( tmp_13_fu_345_p2 );

    SC_METHOD(thread_sel_tmp_fu_351_p2);
    sensitive << ( p_Val2_s_24_reg_434 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_tmp3_fu_250_p2);
    sensitive << ( p_Val2_3_reg_419 );
    sensitive << ( p_Val2_4_fu_241_p1 );

    SC_METHOD(thread_tmp4_cast_fu_261_p1);
    sensitive << ( tmp4_fu_255_p2 );

    SC_METHOD(thread_tmp4_fu_255_p2);
    sensitive << ( tmp_8_cast_fu_238_p1 );
    sensitive << ( tmp_2_cast_fu_244_p1 );

    SC_METHOD(thread_tmp_11_fu_339_p2);
    sensitive << ( notrhs_fu_334_p2 );
    sensitive << ( notlhs_fu_329_p2 );

    SC_METHOD(thread_tmp_12_fu_117_p0);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( p_Result_s_fu_314_p5 );

    SC_METHOD(thread_tmp_13_fu_345_p2);
    sensitive << ( tmp_11_fu_339_p2 );
    sensitive << ( tmp_12_fu_117_p2 );

    SC_METHOD(thread_tmp_14_fu_376_p2);
    sensitive << ( sel_tmp1_reg_467 );
    sensitive << ( tmp_16_fu_362_p3 );

    SC_METHOD(thread_tmp_15_fu_310_p1);
    sensitive << ( res_V_1_fu_290_p1 );

    SC_METHOD(thread_tmp_16_fu_362_p3);
    sensitive << ( p_Val2_s_24_reg_434 );

    SC_METHOD(thread_tmp_1_fu_265_p2);
    sensitive << ( tmp_8_reg_429 );
    sensitive << ( tmp_9_fu_247_p1 );

    SC_METHOD(thread_tmp_2_cast_fu_244_p1);
    sensitive << ( tmp_10_reg_414 );

    SC_METHOD(thread_tmp_2_fu_131_p1);
    sensitive << ( p_Val2_1_fu_125_p2 );

    SC_METHOD(thread_tmp_3_fu_135_p1);
    sensitive << ( acc_out_V_i );

    SC_METHOD(thread_tmp_4_fu_157_p3);
    sensitive << ( internal_acc_V_fu_139_p2 );

    SC_METHOD(thread_tmp_5_fu_270_p1);
    sensitive << ( tmp4_fu_255_p2 );

    SC_METHOD(thread_tmp_7_fu_173_p2);
    sensitive << ( tmp_s_fu_151_p2 );
    sensitive << ( tmp_4_fu_157_p3 );

    SC_METHOD(thread_tmp_8_cast_fu_238_p1);
    sensitive << ( tmp_6_reg_424 );

    SC_METHOD(thread_tmp_9_fu_247_p1);
    sensitive << ( tmp_reg_408 );

    SC_METHOD(thread_tmp_s_fu_151_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( internal_acc_V_fu_139_p2 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const2);

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const1);

    ap_CS_fsm = "00000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "PI_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, setpoint_V, "(port)setpoint_V");
    sc_trace(mVcdFile, plant_in_V, "(port)plant_in_V");
    sc_trace(mVcdFile, error_V, "(port)error_V");
    sc_trace(mVcdFile, error_V_ap_vld, "(port)error_V_ap_vld");
    sc_trace(mVcdFile, pi_out_V, "(port)pi_out_V");
    sc_trace(mVcdFile, pi_out_V_ap_vld, "(port)pi_out_V_ap_vld");
    sc_trace(mVcdFile, acc_out_V_i, "(port)acc_out_V_i");
    sc_trace(mVcdFile, acc_out_V_o, "(port)acc_out_V_o");
    sc_trace(mVcdFile, acc_out_V_o_ap_vld, "(port)acc_out_V_o_ap_vld");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, p_Val2_1_fu_125_p2, "p_Val2_1_fu_125_p2");
    sc_trace(mVcdFile, p_Val2_1_reg_402, "p_Val2_1_reg_402");
    sc_trace(mVcdFile, tmp_reg_408, "tmp_reg_408");
    sc_trace(mVcdFile, tmp_10_reg_414, "tmp_10_reg_414");
    sc_trace(mVcdFile, p_Val2_3_reg_419, "p_Val2_3_reg_419");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, tmp_6_reg_424, "tmp_6_reg_424");
    sc_trace(mVcdFile, tmp_8_reg_429, "tmp_8_reg_429");
    sc_trace(mVcdFile, p_Val2_s_24_fu_274_p2, "p_Val2_s_24_fu_274_p2");
    sc_trace(mVcdFile, p_Val2_s_24_reg_434, "p_Val2_s_24_reg_434");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, p_Val2_cast_fu_280_p2, "p_Val2_cast_fu_280_p2");
    sc_trace(mVcdFile, p_Val2_cast_reg_441, "p_Val2_cast_reg_441");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, res_V_1_fu_290_p1, "res_V_1_fu_290_p1");
    sc_trace(mVcdFile, res_V_1_reg_451, "res_V_1_reg_451");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, exp_V_2_fu_304_p2, "exp_V_2_fu_304_p2");
    sc_trace(mVcdFile, exp_V_2_reg_456, "exp_V_2_reg_456");
    sc_trace(mVcdFile, tmp_15_fu_310_p1, "tmp_15_fu_310_p1");
    sc_trace(mVcdFile, tmp_15_reg_462, "tmp_15_reg_462");
    sc_trace(mVcdFile, sel_tmp1_fu_356_p2, "sel_tmp1_fu_356_p2");
    sc_trace(mVcdFile, sel_tmp1_reg_467, "sel_tmp1_reg_467");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, tmp_12_fu_117_p0, "tmp_12_fu_117_p0");
    sc_trace(mVcdFile, grp_fu_122_p0, "grp_fu_122_p0");
    sc_trace(mVcdFile, tmp_2_fu_131_p1, "tmp_2_fu_131_p1");
    sc_trace(mVcdFile, tmp_3_fu_135_p1, "tmp_3_fu_135_p1");
    sc_trace(mVcdFile, internal_acc_V_fu_139_p2, "internal_acc_V_fu_139_p2");
    sc_trace(mVcdFile, tmp_s_fu_151_p2, "tmp_s_fu_151_p2");
    sc_trace(mVcdFile, tmp_4_fu_157_p3, "tmp_4_fu_157_p3");
    sc_trace(mVcdFile, tmp_7_fu_173_p2, "tmp_7_fu_173_p2");
    sc_trace(mVcdFile, p_Val2_5_fu_165_p3, "p_Val2_5_fu_165_p3");
    sc_trace(mVcdFile, internal_acc_V_cast_fu_145_p2, "internal_acc_V_cast_fu_145_p2");
    sc_trace(mVcdFile, p_087_1_fu_179_p3, "p_087_1_fu_179_p3");
    sc_trace(mVcdFile, p_Val2_2_fu_393_p2, "p_Val2_2_fu_393_p2");
    sc_trace(mVcdFile, p_Val2_4_fu_241_p1, "p_Val2_4_fu_241_p1");
    sc_trace(mVcdFile, tmp_8_cast_fu_238_p1, "tmp_8_cast_fu_238_p1");
    sc_trace(mVcdFile, tmp_2_cast_fu_244_p1, "tmp_2_cast_fu_244_p1");
    sc_trace(mVcdFile, tmp4_fu_255_p2, "tmp4_fu_255_p2");
    sc_trace(mVcdFile, tmp_9_fu_247_p1, "tmp_9_fu_247_p1");
    sc_trace(mVcdFile, tmp4_cast_fu_261_p1, "tmp4_cast_fu_261_p1");
    sc_trace(mVcdFile, tmp3_fu_250_p2, "tmp3_fu_250_p2");
    sc_trace(mVcdFile, tmp_1_fu_265_p2, "tmp_1_fu_265_p2");
    sc_trace(mVcdFile, tmp_5_fu_270_p1, "tmp_5_fu_270_p1");
    sc_trace(mVcdFile, grp_fu_122_p1, "grp_fu_122_p1");
    sc_trace(mVcdFile, exp_V_fu_294_p4, "exp_V_fu_294_p4");
    sc_trace(mVcdFile, p_Result_s_fu_314_p5, "p_Result_s_fu_314_p5");
    sc_trace(mVcdFile, notrhs_fu_334_p2, "notrhs_fu_334_p2");
    sc_trace(mVcdFile, notlhs_fu_329_p2, "notlhs_fu_329_p2");
    sc_trace(mVcdFile, tmp_11_fu_339_p2, "tmp_11_fu_339_p2");
    sc_trace(mVcdFile, tmp_12_fu_117_p2, "tmp_12_fu_117_p2");
    sc_trace(mVcdFile, sel_tmp_fu_351_p2, "sel_tmp_fu_351_p2");
    sc_trace(mVcdFile, tmp_13_fu_345_p2, "tmp_13_fu_345_p2");
    sc_trace(mVcdFile, tmp_16_fu_362_p3, "tmp_16_fu_362_p3");
    sc_trace(mVcdFile, tmp_14_fu_376_p2, "tmp_14_fu_376_p2");
    sc_trace(mVcdFile, p_Val2_cast_25_fu_369_p3, "p_Val2_cast_25_fu_369_p3");
    sc_trace(mVcdFile, pi_out_V_new_1_fu_381_p3, "pi_out_V_new_1_fu_381_p3");
    sc_trace(mVcdFile, p_Val2_2_fu_393_p0, "p_Val2_2_fu_393_p0");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("PI.hdltvin.dat");
    mHdltvoutHandle.open("PI.hdltvout.dat");
}

PI::~PI() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete PI_dcmp_64ns_64nsbkb_U1;
    delete PI_sitodp_32s_64_cud_U2;
    delete PI_mul_mul_10ns_1dEe_U3;
}

void PI::thread_ap_var_for_const2() {
    ap_var_for_const2 = ap_const_logic_1;
}

void PI::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_lv64_400A666666666666;
}

void PI::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_lv5_2;
}

void PI::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        exp_V_2_reg_456 = exp_V_2_fu_304_p2.read();
        res_V_1_reg_451 = res_V_1_fu_290_p1.read();
        tmp_15_reg_462 = tmp_15_fu_310_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        p_Val2_1_reg_402 = p_Val2_1_fu_125_p2.read();
        tmp_10_reg_414 = p_087_1_fu_179_p3.read().range(5, 5);
        tmp_reg_408 = p_087_1_fu_179_p3.read().range(14, 6);
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        p_Val2_3_reg_419 = p_Val2_2_fu_393_p2.read().range(23, 8);
        tmp_6_reg_424 = p_Val2_2_fu_393_p2.read().range(7, 7);
        tmp_8_reg_429 = p_Val2_2_fu_393_p2.read().range(22, 8);
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        p_Val2_cast_reg_441 = p_Val2_cast_fu_280_p2.read();
        p_Val2_s_24_reg_434 = p_Val2_s_24_fu_274_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        sel_tmp1_reg_467 = sel_tmp1_fu_356_p2.read();
    }
}

void PI::thread_acc_out_V_o() {
    acc_out_V_o = esl_zext<16,15>(p_087_1_fu_179_p3.read());
}

void PI::thread_acc_out_V_o_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        acc_out_V_o_ap_vld = ap_const_logic_1;
    } else {
        acc_out_V_o_ap_vld = ap_const_logic_0;
    }
}

void PI::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void PI::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void PI::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void PI::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void PI::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void PI::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void PI::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void PI::thread_ap_done() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void PI::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void PI::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void PI::thread_error_V() {
    error_V = p_Val2_1_reg_402.read();
}

void PI::thread_error_V_ap_vld() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        error_V_ap_vld = ap_const_logic_1;
    } else {
        error_V_ap_vld = ap_const_logic_0;
    }
}

void PI::thread_exp_V_2_fu_304_p2() {
    exp_V_2_fu_304_p2 = (!ap_const_lv11_7F8.is_01() || !exp_V_fu_294_p4.read().is_01())? sc_lv<11>(): (sc_bigint<11>(ap_const_lv11_7F8) + sc_biguint<11>(exp_V_fu_294_p4.read()));
}

void PI::thread_exp_V_fu_294_p4() {
    exp_V_fu_294_p4 = res_V_1_fu_290_p1.read().range(62, 52);
}

void PI::thread_grp_fu_122_p0() {
    grp_fu_122_p0 = esl_sext<32,16>(p_Val2_s_24_reg_434.read());
}

void PI::thread_internal_acc_V_cast_fu_145_p2() {
    internal_acc_V_cast_fu_145_p2 = (!tmp_2_fu_131_p1.read().is_01() || !tmp_3_fu_135_p1.read().is_01())? sc_lv<15>(): (sc_biguint<15>(tmp_2_fu_131_p1.read()) + sc_biguint<15>(tmp_3_fu_135_p1.read()));
}

void PI::thread_internal_acc_V_fu_139_p2() {
    internal_acc_V_fu_139_p2 = (!acc_out_V_i.read().is_01() || !p_Val2_1_fu_125_p2.read().is_01())? sc_lv<16>(): (sc_biguint<16>(acc_out_V_i.read()) + sc_bigint<16>(p_Val2_1_fu_125_p2.read()));
}

void PI::thread_notlhs_fu_329_p2() {
    notlhs_fu_329_p2 = (!exp_V_2_reg_456.read().is_01() || !ap_const_lv11_7FF.is_01())? sc_lv<1>(): sc_lv<1>(exp_V_2_reg_456.read() != ap_const_lv11_7FF);
}

void PI::thread_notrhs_fu_334_p2() {
    notrhs_fu_334_p2 = (!tmp_15_reg_462.read().is_01() || !ap_const_lv52_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_15_reg_462.read() == ap_const_lv52_0);
}

void PI::thread_p_087_1_fu_179_p3() {
    p_087_1_fu_179_p3 = (!tmp_7_fu_173_p2.read()[0].is_01())? sc_lv<15>(): ((tmp_7_fu_173_p2.read()[0].to_bool())? p_Val2_5_fu_165_p3.read(): internal_acc_V_cast_fu_145_p2.read());
}

void PI::thread_p_Result_s_fu_314_p5() {
    p_Result_s_fu_314_p5 = esl_partset<64,64,11,32,32>(res_V_1_reg_451.read(), exp_V_2_reg_456.read(), ap_const_lv32_34, ap_const_lv32_3E);
}

void PI::thread_p_Val2_1_fu_125_p2() {
    p_Val2_1_fu_125_p2 = (!setpoint_V.read().is_01() || !plant_in_V.read().is_01())? sc_lv<16>(): (sc_biguint<16>(setpoint_V.read()) - sc_biguint<16>(plant_in_V.read()));
}

void PI::thread_p_Val2_2_fu_393_p0() {
    p_Val2_2_fu_393_p0 =  (sc_lv<10>) (ap_const_lv26_14A);
}

void PI::thread_p_Val2_4_fu_241_p1() {
    p_Val2_4_fu_241_p1 = esl_zext<16,9>(tmp_reg_408.read());
}

void PI::thread_p_Val2_5_fu_165_p3() {
    p_Val2_5_fu_165_p3 = (!tmp_s_fu_151_p2.read()[0].is_01())? sc_lv<15>(): ((tmp_s_fu_151_p2.read()[0].to_bool())? ap_const_lv15_4000: ap_const_lv15_0);
}

void PI::thread_p_Val2_cast_25_fu_369_p3() {
    p_Val2_cast_25_fu_369_p3 = (!sel_tmp1_reg_467.read()[0].is_01())? sc_lv<15>(): ((sel_tmp1_reg_467.read()[0].to_bool())? ap_const_lv15_34D: ap_const_lv15_0);
}

void PI::thread_p_Val2_cast_fu_280_p2() {
    p_Val2_cast_fu_280_p2 = (!tmp_1_fu_265_p2.read().is_01() || !tmp_5_fu_270_p1.read().is_01())? sc_lv<15>(): (sc_biguint<15>(tmp_1_fu_265_p2.read()) + sc_biguint<15>(tmp_5_fu_270_p1.read()));
}

void PI::thread_p_Val2_s_24_fu_274_p2() {
    p_Val2_s_24_fu_274_p2 = (!tmp4_cast_fu_261_p1.read().is_01() || !tmp3_fu_250_p2.read().is_01())? sc_lv<16>(): (sc_biguint<16>(tmp4_cast_fu_261_p1.read()) + sc_biguint<16>(tmp3_fu_250_p2.read()));
}

void PI::thread_pi_out_V() {
    pi_out_V = esl_zext<16,15>(pi_out_V_new_1_fu_381_p3.read());
}

void PI::thread_pi_out_V_ap_vld() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        pi_out_V_ap_vld = ap_const_logic_1;
    } else {
        pi_out_V_ap_vld = ap_const_logic_0;
    }
}

void PI::thread_pi_out_V_new_1_fu_381_p3() {
    pi_out_V_new_1_fu_381_p3 = (!tmp_14_fu_376_p2.read()[0].is_01())? sc_lv<15>(): ((tmp_14_fu_376_p2.read()[0].to_bool())? p_Val2_cast_25_fu_369_p3.read(): p_Val2_cast_reg_441.read());
}

void PI::thread_res_V_1_fu_290_p1() {
    res_V_1_fu_290_p1 = grp_fu_122_p1.read();
}

void PI::thread_sel_tmp1_fu_356_p2() {
    sel_tmp1_fu_356_p2 = (sel_tmp_fu_351_p2.read() & tmp_13_fu_345_p2.read());
}

void PI::thread_sel_tmp_fu_351_p2() {
    sel_tmp_fu_351_p2 = (!p_Val2_s_24_reg_434.read().is_01() || !ap_const_lv16_0.is_01())? sc_lv<1>(): sc_lv<1>(p_Val2_s_24_reg_434.read() != ap_const_lv16_0);
}

void PI::thread_tmp3_fu_250_p2() {
    tmp3_fu_250_p2 = (!p_Val2_3_reg_419.read().is_01() || !p_Val2_4_fu_241_p1.read().is_01())? sc_lv<16>(): (sc_biguint<16>(p_Val2_3_reg_419.read()) + sc_biguint<16>(p_Val2_4_fu_241_p1.read()));
}

void PI::thread_tmp4_cast_fu_261_p1() {
    tmp4_cast_fu_261_p1 = esl_zext<16,2>(tmp4_fu_255_p2.read());
}

void PI::thread_tmp4_fu_255_p2() {
    tmp4_fu_255_p2 = (!tmp_8_cast_fu_238_p1.read().is_01() || !tmp_2_cast_fu_244_p1.read().is_01())? sc_lv<2>(): (sc_biguint<2>(tmp_8_cast_fu_238_p1.read()) + sc_biguint<2>(tmp_2_cast_fu_244_p1.read()));
}

void PI::thread_tmp_11_fu_339_p2() {
    tmp_11_fu_339_p2 = (notrhs_fu_334_p2.read() | notlhs_fu_329_p2.read());
}

void PI::thread_tmp_12_fu_117_p0() {
    tmp_12_fu_117_p0 = p_Result_s_fu_314_p5.read();
}

void PI::thread_tmp_13_fu_345_p2() {
    tmp_13_fu_345_p2 = (tmp_11_fu_339_p2.read() & tmp_12_fu_117_p2.read());
}

void PI::thread_tmp_14_fu_376_p2() {
    tmp_14_fu_376_p2 = (sel_tmp1_reg_467.read() | tmp_16_fu_362_p3.read());
}

void PI::thread_tmp_15_fu_310_p1() {
    tmp_15_fu_310_p1 = res_V_1_fu_290_p1.read().range(52-1, 0);
}

void PI::thread_tmp_16_fu_362_p3() {
    tmp_16_fu_362_p3 = p_Val2_s_24_reg_434.read().range(15, 15);
}

void PI::thread_tmp_1_fu_265_p2() {
    tmp_1_fu_265_p2 = (!tmp_9_fu_247_p1.read().is_01() || !tmp_8_reg_429.read().is_01())? sc_lv<15>(): (sc_biguint<15>(tmp_9_fu_247_p1.read()) + sc_biguint<15>(tmp_8_reg_429.read()));
}

void PI::thread_tmp_2_cast_fu_244_p1() {
    tmp_2_cast_fu_244_p1 = esl_zext<2,1>(tmp_10_reg_414.read());
}

void PI::thread_tmp_2_fu_131_p1() {
    tmp_2_fu_131_p1 = p_Val2_1_fu_125_p2.read().range(15-1, 0);
}

void PI::thread_tmp_3_fu_135_p1() {
    tmp_3_fu_135_p1 = acc_out_V_i.read().range(15-1, 0);
}

void PI::thread_tmp_4_fu_157_p3() {
    tmp_4_fu_157_p3 = internal_acc_V_fu_139_p2.read().range(15, 15);
}

void PI::thread_tmp_5_fu_270_p1() {
    tmp_5_fu_270_p1 = esl_zext<15,2>(tmp4_fu_255_p2.read());
}

void PI::thread_tmp_7_fu_173_p2() {
    tmp_7_fu_173_p2 = (tmp_s_fu_151_p2.read() | tmp_4_fu_157_p3.read());
}

void PI::thread_tmp_8_cast_fu_238_p1() {
    tmp_8_cast_fu_238_p1 = esl_zext<2,1>(tmp_6_reg_424.read());
}

void PI::thread_tmp_9_fu_247_p1() {
    tmp_9_fu_247_p1 = esl_zext<15,9>(tmp_reg_408.read());
}

void PI::thread_tmp_s_fu_151_p2() {
    tmp_s_fu_151_p2 = (!internal_acc_V_fu_139_p2.read().is_01() || !ap_const_lv16_4000.is_01())? sc_lv<1>(): (sc_bigint<16>(internal_acc_V_fu_139_p2.read()) > sc_bigint<16>(ap_const_lv16_4000));
}

void PI::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm = "XXXXXXXXXXX";
            break;
    }
}

void PI::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"setpoint_V\" :  \"" << setpoint_V.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"plant_in_V\" :  \"" << plant_in_V.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"error_V\" :  \"" << error_V.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"error_V_ap_vld\" :  \"" << error_V_ap_vld.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"pi_out_V\" :  \"" << pi_out_V.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"pi_out_V_ap_vld\" :  \"" << pi_out_V_ap_vld.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"acc_out_V_i\" :  \"" << acc_out_V_i.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"acc_out_V_o\" :  \"" << acc_out_V_o.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"acc_out_V_o_ap_vld\" :  \"" << acc_out_V_o_ap_vld.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

